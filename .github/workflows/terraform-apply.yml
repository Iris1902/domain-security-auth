name: Apply Terraform Changes for Domain Security Auth

on:
  push:
    branches:
      - dev
      - qa
      - main
    paths:
      - 'trigger-*.log' 

jobs:
  terraform-apply:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: Set Git config for commits (optional)
        run: |
          git config --global user.email "irispicis1962@gmail.com"
          git config --global user.name "Iris1902"

      - name: Initialize Terraform
        run: terraform init

      - name: Import AWS resources if they already exist
        run: |
          set -e

          echo "🔍 Importando recursos si existen en AWS..."

          # Intentar importar Key Pair
          aws ec2 describe-key-pairs --key-names encrypt-key >/dev/null 2>&1 && \
          terraform import module.encrypt.aws_key_pair.key encrypt-key || \
          echo "🔑 Key pair 'encrypt-key' no existe, se creará."

          # Intentar importar el Load Balancer
          LB_ARN=$(aws elbv2 describe-load-balancers --names encrypt-alb --query "LoadBalancers[0].LoadBalancerArn" --output text 2>/dev/null)
          if [ "$LB_ARN" != "None" ]; then
            terraform import module.encrypt.aws_lb.alb "$LB_ARN"
          else
            echo "🌀 Load Balancer 'encrypt-alb' no existe, se creará."
          fi

          # Intentar importar el Target Group
          TG_ARN=$(aws elbv2 describe-target-groups --names encrypt-tg --query "TargetGroups[0].TargetGroupArn" --output text 2>/dev/null)
          if [ "$TG_ARN" != "None" ]; then
            terraform import module.encrypt.aws_lb_target_group.tg "$TG_ARN"
          else
            echo "🎯 Target Group 'encrypt-tg' no existe, se creará."
          fi

      - name: Validate Terraform
        run: terraform validate

      - name: Format Terraform
        run: terraform fmt -recursive

      - name: Plan Terraform
        run: |
          terraform plan \
            -var="AWS_REGION=${{ secrets.AWS_REGION }}" \
            -var="AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" \
            -var="AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
            -var="AWS_SESSION_TOKEN=${{ secrets.AWS_SESSION_TOKEN }}" \
            -var="BRANCH_NAME=${{ github.ref_name }}"
      
      - name: Apply Terraform
        run: |
          terraform apply -auto-approve \
            -var="AWS_REGION=${{ secrets.AWS_REGION }}" \
            -var="AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" \
            -var="AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
            -var="AWS_SESSION_TOKEN=${{ secrets.AWS_SESSION_TOKEN }}" \
            -var="BRANCH_NAME=${{ github.ref_name }}"
